# ios/Podfile - Firebase + Xcode 16.2 Compatible
platform :ios, '15.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter pub get' first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# ðŸ”¥ FIREBASE + XCODE 16.2 COMPATIBILITY
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # âœ… BASIC SETTINGS
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf'
      config.build_settings['ENABLE_BITCODE'] = 'NO'

      # âœ… ADD THIS BLOCK for nanopb fix
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PB_FIELD_16BIT'

      # ðŸ”¥ FIREBASE FIXES
      if target.name.include?('Firebase') || target.name.include?('Google')
        puts "ðŸ”¥ Applying Firebase fixes to: #{target.name}"

        current_defs = config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] || []
        current_defs = [current_defs] if current_defs.is_a?(String)

        firebase_defs = [
          'Firebase_VERSION=10.25.0',
          'FirebaseCore_VERSION=10.25.0', 
          'FirebaseAuth_VERSION=10.25.0',
          'FirebaseFirestore_VERSION=10.25.0',
          'FIRCore_VERSION=10.25.0',
          'FIRAuth_VERSION=10.25.0',
          'FIRFirestore_VERSION=10.25.0',
          'COCOAPODS=1'
        ]
        
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = (current_defs + firebase_defs).uniq

        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['SWIFT_VERSION'] = '5.0'
        config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu11'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
      end

      # CLEAN DEBUG FLAGS
      ['OTHER_CFLAGS', 'OTHER_CPLUSPLUSFLAGS', 'OTHER_SWIFT_FLAGS'].each do |flag_key|
        if config.build_settings[flag_key]
          flags = config.build_settings[flag_key]
          if flags.is_a?(String)
            cleaned = flags.gsub(/-G\d*/, '').gsub(/-g\w*/, '').strip
            config.build_settings[flag_key] = cleaned.empty? ? '' : cleaned
          elsif flags.is_a?(Array)
            cleaned = flags.reject { |flag| flag.to_s.match?(/^-G\d*$|^-g\w*$/) }
            config.build_settings[flag_key] = cleaned
          end
        end
      end
    end
  end

  puts "âœ… Firebase + Xcode 16.2 compatibility applied!"
end
